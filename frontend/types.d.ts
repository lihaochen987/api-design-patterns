/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/product": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create a product */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["CreateProductRequest"];
                    "text/json": components["schemas"]["CreateProductRequest"];
                    "application/*+json": components["schemas"]["CreateProductRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["CreateProductResponse"];
                        "application/json": components["schemas"]["CreateProductResponse"];
                        "text/json": components["schemas"]["CreateProductResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/product/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a product */
        get: {
            parameters: {
                query?: {
                    FieldMask?: string[];
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["GetProductResponse"];
                        "application/json": components["schemas"]["GetProductResponse"];
                        "text/json": components["schemas"]["GetProductResponse"];
                    };
                };
            };
        };
        /** Replace a product */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ReplaceProductRequest"];
                    "text/json": components["schemas"]["ReplaceProductRequest"];
                    "application/*+json": components["schemas"]["ReplaceProductRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ReplaceProductResponse"];
                        "application/json": components["schemas"]["ReplaceProductResponse"];
                        "text/json": components["schemas"]["ReplaceProductResponse"];
                    };
                };
            };
        };
        post?: never;
        /** Delete a product */
        delete: {
            parameters: {
                query?: {
                    request?: components["schemas"]["DeleteProductRequest"];
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /** Update a product */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["UpdateProductRequest"];
                    "text/json": components["schemas"]["UpdateProductRequest"];
                    "application/*+json": components["schemas"]["UpdateProductRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["UpdateProductResponse"];
                        "application/json": components["schemas"]["UpdateProductResponse"];
                        "text/json": components["schemas"]["UpdateProductResponse"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/product/{id}/pricing": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a product pricing */
        get: {
            parameters: {
                query?: {
                    FieldMask?: string[];
                };
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["GetProductPricingResponse"];
                        "application/json": components["schemas"]["GetProductPricingResponse"];
                        "text/json": components["schemas"]["GetProductPricingResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update a product pricing */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["UpdateProductPricingRequest"];
                    "text/json": components["schemas"]["UpdateProductPricingRequest"];
                    "application/*+json": components["schemas"]["UpdateProductPricingRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["UpdateProductPricingResponse"];
                        "application/json": components["schemas"]["UpdateProductPricingResponse"];
                        "text/json": components["schemas"]["UpdateProductPricingResponse"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List products */
        get: {
            parameters: {
                query?: {
                    Parent?: string;
                    Filter?: string;
                    PageToken?: string;
                    MaxPageSize?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ListProductsResponse"][];
                        "application/json": components["schemas"]["ListProductsResponse"][];
                        "text/json": components["schemas"]["ListProductsResponse"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        CreateProductRequest: {
            name?: string | null;
            pricing?: components["schemas"]["ProductPricingContract"];
            category?: string | null;
            dimensions?: components["schemas"]["DimensionsContract"];
            ageGroup?: string | null;
            breedSize?: string | null;
            ingredients?: string | null;
            nutritionalInfo?: {
                [key: string]: unknown;
            } | null;
            storageInstructions?: string | null;
            weightKg?: string | null;
            isNatural?: boolean | null;
            isHypoAllergenic?: boolean | null;
            usageInstructions?: string | null;
            isCrueltyFree?: boolean | null;
            safetyWarnings?: string | null;
        };
        CreateProductResponse: {
            name?: string | null;
            pricing?: components["schemas"]["ProductPricingContract"];
            category?: string | null;
            dimensions?: components["schemas"]["DimensionsContract"];
            ageGroup?: string | null;
            breedSize?: string | null;
            ingredients?: string | null;
            nutritionalInfo?: string | null;
            storageInstructions?: string | null;
            weightKg?: string | null;
            isNatural?: boolean | null;
            isHypoAllergenic?: boolean | null;
            usageInstructions?: string | null;
            isCrueltyFree?: boolean | null;
            safetyWarnings?: string | null;
        };
        DeleteProductRequest: Record<string, never>;
        DimensionsContract: {
            length?: string | null;
            width?: string | null;
            height?: string | null;
        };
        GetProductPricingResponse: {
            id?: string | null;
            basePrice?: string | null;
            discountPercentage?: string | null;
            taxRate?: string | null;
        };
        GetProductResponse: {
            id?: string | null;
            name?: string | null;
            price?: string | null;
            category?: string | null;
            dimensions?: components["schemas"]["DimensionsContract"];
            ageGroup?: string | null;
            breedSize?: string | null;
            ingredients?: string | null;
            nutritionalInfo?: string | null;
            storageInstructions?: string | null;
            weightKg?: string | null;
            isNatural?: boolean | null;
            isHypoAllergenic?: boolean | null;
            usageInstructions?: string | null;
            isCrueltyFree?: boolean | null;
            safetyWarnings?: string | null;
        };
        ListProductsResponse: {
            results?: components["schemas"]["GetProductResponse"][] | null;
            nextPageToken?: string | null;
        };
        ProductPricingContract: {
            basePrice?: string | null;
            discountPercentage?: string | null;
            taxRate?: string | null;
        };
        ReplaceProductRequest: {
            name?: string | null;
            pricing?: components["schemas"]["ProductPricingContract"];
            category?: string | null;
            dimensions?: components["schemas"]["DimensionsContract"];
            ageGroup?: string | null;
            breedSize?: string | null;
            ingredients?: string | null;
            nutritionalInfo?: {
                [key: string]: unknown;
            } | null;
            storageInstructions?: string | null;
            weightKg?: string | null;
            isNatural?: boolean | null;
            isHypoAllergenic?: boolean | null;
            usageInstructions?: string | null;
            isCrueltyFree?: boolean | null;
            safetyWarnings?: string | null;
        };
        ReplaceProductResponse: {
            name?: string | null;
            pricing?: components["schemas"]["ProductPricingContract"];
            category?: string | null;
            dimensions?: components["schemas"]["DimensionsContract"];
            ageGroup?: string | null;
            breedSize?: string | null;
            ingredients?: string | null;
            nutritionalInfo?: string | null;
            storageInstructions?: string | null;
            weightKg?: string | null;
            isNatural?: boolean | null;
            isHypoAllergenic?: boolean | null;
            usageInstructions?: string | null;
            isCrueltyFree?: boolean | null;
            safetyWarnings?: string | null;
        };
        UpdateProductPricingRequest: {
            basePrice?: string | null;
            discountPercentage?: string | null;
            taxRate?: string | null;
            fieldMask?: string[] | null;
        };
        UpdateProductPricingResponse: {
            id?: string | null;
            basePrice?: string | null;
            discountPercentage?: string | null;
            taxRate?: string | null;
        };
        UpdateProductRequest: {
            name?: string | null;
            pricing?: components["schemas"]["ProductPricingContract"];
            category?: string | null;
            dimensions?: components["schemas"]["DimensionsContract"];
            ageGroup?: string | null;
            breedSize?: string | null;
            ingredients?: string | null;
            nutritionalInfo?: {
                [key: string]: unknown;
            } | null;
            storageInstructions?: string | null;
            weightKg?: string | null;
            isNatural?: boolean | null;
            isHypoAllergenic?: boolean | null;
            usageInstructions?: string | null;
            isCrueltyFree?: boolean | null;
            safetyWarnings?: string | null;
            fieldMask?: string[] | null;
        };
        UpdateProductResponse: {
            id?: string | null;
            name?: string | null;
            pricing?: components["schemas"]["ProductPricingContract"];
            category?: string | null;
            dimensions?: components["schemas"]["DimensionsContract"];
            ageGroup?: string | null;
            breedSize?: string | null;
            ingredients?: string | null;
            nutritionalInfo?: string | null;
            storageInstructions?: string | null;
            weightKg?: string | null;
            isNatural?: boolean | null;
            isHypoAllergenic?: boolean | null;
            usageInstructions?: string | null;
            isCrueltyFree?: boolean | null;
            safetyWarnings?: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
