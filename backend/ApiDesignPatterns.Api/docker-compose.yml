services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: myusername
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - app-network
    depends_on:
      - redis

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres;Database=mydatabase;Username=myusername;Password=mypassword"
      REDIS_CONNECTION: "redis:6379"
      RABBITMQ_HOST: rabbitmq
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_healthy
    #      rabbitmq:
    #        condition: service_healthy
    restart: on-failure
    networks:
      - app-network
    ports:
      - "8080:8080"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres
    networks:
      - app-network

  #  rabbitmq:
  #    image: rabbitmq:3-management
  #    ports:
  #      - "5672:5672"
  #      - "15672:15672"
  #    environment:
  #      RABBITMQ_DEFAULT_USER: guest
  #      RABBITMQ_DEFAULT_PASS: guest
  #    healthcheck:
  #      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
  #      interval: 5s
  #      timeout: 3s
  #      retries: 5
  #      start_period: 10s
  #    networks:
  #      - app-network
  #    volumes:
  #      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  postgres_data:
  pgadmin_data:
  rabbitmq_data:
  redis_data:

networks:
  app-network:
    driver: bridge
